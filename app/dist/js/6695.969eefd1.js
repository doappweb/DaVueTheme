"use strict";(self["webpackChunkdoapp_crmtheme"]=self["webpackChunkdoapp_crmtheme"]||[]).push([[6695,3618],{43618:function(t,e,r){r.r(e),r.d(e,{default:function(){return u}});var a=r(73396),o=r(87139);const i=["id"],s={key:1,class:"text-center py-3 text-muted"};function l(t,e,r,l,n,p){return p.isReportDataEmpty?((0,a.wg)(),(0,a.iD)("p",s,(0,o.zw)(t.DOAPP.utils.translate("LBL_NO_DATA")),1)):((0,a.wg)(),(0,a.iD)("div",{key:0,id:"da_plotly_"+r.chart.id,ref:"plotly"},null,8,i))}r(82801),r(61295),r(57658);var n=r(6427),p={name:"abstractChart",data(){return{type:"",locales:{}}},mounted(){this.initChart()},props:{chart:{type:Object,required:!0},reportData:{type:Object,required:!0},fieldsData:{type:Array,required:!0},mainGroupFieldIndex:{type:[String,null],required:!0}},watch:{isDarkTheme(t,e){t!==e&&this.initChart()}},computed:{getData(){return this.getDefaultData("x","y")},getOptions(){return structuredClone(this.getDefaultOptions)},getLocale(){let t=this.$store.state.app.curLang.toLowerCase();return Object.hasOwn(n["default"],t)?n["default"][t]:null},getConfig(){let t={displaylogo:!1,responsive:!0,dragmode:!1,modeBarButtonsToRemove:["zoom2d","resetScale2d"],toImageButtonOptions:{filename:this.chart.name}};return this.getLocale&&(t.locale=this.getLocale.locale),t},isReportDataEmpty(){return Array.isArray(this.reportData.data)&&!this.reportData.data.length},isDarkTheme(){return this.$store.getters["app/isDarkMode"]},getTextColor(){return this.isDarkTheme?"#ffffff":"#000000"},getPlotBGColor(){return this.isDarkTheme?"#343a40":"#ffffff"},getLegendBGColor(){return this.isDarkTheme?"rgba(52,58,64,0.5)":"rgba(255,255,255,0.65)"},getLegendBorderColor(){return this.isDarkTheme,"rgba(25,25,25,0.69)"},getDefaultOptions(){let t={},e=this.getTextColor;return t.plot_bgcolor=this.getPlotBGColor,t.paper_bgcolor=this.getPlotBGColor,t.autosize=!0,t.margin={t:0,r:0,b:0,l:0},t.legend={font:{size:12,family:"Source Sans Pro",color:e},x:1,y:.9,bgcolor:this.getLegendBGColor,xanchor:"right",yanchor:"top",xref:"paper",yref:"paper",borderwidth:2,bordercolor:this.getLegendBorderColor},t.legendgrouptitle={font:{size:14,family:"Source Sans Pro",color:e}},t.insidetextfont={size:14,family:"Source Sans Pro",color:e},t.outsidetextfont={size:14,family:"Source Sans Pro",color:e},this.chart.name&&"AOR_Reports"===this.$route.query.module&&(t.title={text:this.chart.name,font:{size:16,family:"Source Sans Pro",color:e}}),this.fieldsData.forEach((r=>{r.fieldOrder===this.chart.y_field&&r.label&&(t.yaxis={titlefont:{size:16,family:"Source Sans Pro",color:e},tickfont:{size:14,family:"Source Sans Pro",color:e},color:e,automargin:"width+left"}),r.fieldOrder===this.chart.x_field&&r.label&&(t.xaxis={titlefont:{size:16,family:"Source Sans Pro",color:e},tickfont:{size:14,family:"Source Sans Pro",color:e},color:e,tickangle:"0",automargin:"left+bottom"})})),t.dragmode=!1,t},isShowTotal(){if(null===this.$props.mainGroupFieldIndex)return!1;let t=Object.keys(this.$props.reportData.data)[0];return void 0!==t&&this.$props.reportData.data[t].viewData.isShowTotal},getTotalFieldKey(){if(!this.isShowTotal)return"";null===this.$props.mainGroupFieldIndex&&this.DOAPP.swal.getErrorToast("The main axis is not selected");let t=this.$props.fieldsData.find((t=>t.fieldOrder===this.$props.chart.y_field));return t.label.replace(/ /g,"_")+t.fieldOrder},getMainFieldKey(){null===this.$props.mainGroupFieldIndex&&this.DOAPP.swal.getErrorToast("The main axis is not selected");let t=this.$props.fieldsData.find((t=>t.fieldOrder===this.$props.mainGroupFieldIndex));return t.label.replace(/ /g,"_")+t.fieldOrder}},methods:{initChart(){let t=this.$refs.plotly;t&&(this.getLocale&&this.DOAPP.plotly.register(this.getLocale.package),this.DOAPP.plotly.newPlot(t,this.getData,this.getOptions,this.getConfig))},getDefaultData(t,e,r=!1){let a=[{}];a[0][t]=[],a[0][e]=[],a[0].type=this.type,a[0].marker={color:"#007bff"};let o=0,i="",s=0,l=this.getTotalFieldKey,n="  ";if(this.isShowTotal)for(let p in this.$props.reportData.data)r?a[0][e].push(p+n):a[0][t].push(p+n),o=this.$props.reportData.data[p].viewData.totals[l],r?a[0][t].push(o):a[0][e].push(o);else if(null===this.$props.mainGroupFieldIndex)this.$props.reportData.data.viewData.data.forEach((o=>{for(let t in o)t===l?s=Number(o[t]):i=o[t];r?a[0][e].push(i+n):a[0][t].push(i+n),r?a[0][t].push(s):a[0][e].push(s)}));else for(let p in this.$props.reportData.data)r?a[0][e].push(p+n):a[0][t].push(p+n),o=this.$props.reportData.data[p].viewData.data.length,r?a[0][t].push(o):a[0][e].push(o);return a}}},h=r(40089);const d=(0,h.Z)(p,[["render",l]]);var u=d},56695:function(t,e,r){r.r(e),r.d(e,{default:function(){return s}});r(82801),r(61295);var a=r(43618),o={name:"pieChart",extends:a["default"],data(){return{type:"pie"}},computed:{getData(){let t=structuredClone(this.getDefaultData("labels","values"));return t[0].textinfo="percent",t[0].textposition="inside",t}}};const i=o;var s=i}}]);